{
  "content": "# API Reference\r\n\r\nComplete reference for all components, props, and utility functions.\r\n\r\n## MarkdownExplorer\r\n\r\nThe primary component providing the complete markdown exploration experience.\r\n\r\n### Props\r\n\r\n| Prop | Type | Default | Description |\r\n|------|------|---------|-------------|\r\n| `fileTree` | `FileNode` | - | **Required.** The root node of the file tree |\r\n| `rootPath` | `string` | `'/'` | Root path for navigation |\r\n| `theme` | `'light' \\| 'dark' \\| 'auto'` | `'auto'` | Color theme |\r\n| `className` | `string` | `''` | Additional CSS class |\r\n| `initialRoute` | `string` | - | Initial path to navigate to |\r\n| `onNavigate` | `(path: string, node: FileNode) => void` | - | Navigation callback |\r\n| `enableSearch` | `boolean` | `true` | Enable search functionality |\r\n| `searchPlaceholder` | `string` | `'Search files...'` | Search input placeholder |\r\n| `showIcons` | `boolean` | `true` | Show file/folder icons |\r\n| `showFileTree` | `boolean` | `true` | Show file tree sidebar |\r\n| `renderFileIcon` | `(node: FileNode) => ReactNode` | - | Custom file icon renderer |\r\n| `renderFolderIcon` | `(node: FileNode) => ReactNode` | - | Custom folder icon renderer |\r\n| `sidebarWidth` | `string` | `'280px'` | Sidebar width CSS value |\r\n| `showBreadcrumbs` | `boolean` | `true` | Show breadcrumb navigation |\r\n| `markdownComponents` | `Record<string, ComponentType>` | - | Custom markdown components |\r\n\r\n### Usage Examples\r\n\r\n#### Basic Setup\r\n```tsx\r\n<MarkdownExplorer fileTree={myFileTree} />\r\n```\r\n\r\n#### With Custom Theme\r\n```tsx\r\n<MarkdownExplorer \r\n  fileTree={myFileTree}\r\n  theme=\"dark\"\r\n  className=\"documentation-explorer\"\r\n/>\r\n```\r\n\r\n#### With Navigation Handling\r\n```tsx\r\n<MarkdownExplorer \r\n  fileTree={myFileTree}\r\n  initialRoute=\"/docs/introduction.md\"\r\n  onNavigate={(path, node) => {\r\n    console.log('Navigated to:', path);\r\n    // Update router, analytics, etc.\r\n  }}\r\n/>\r\n```\r\n\r\n## FileTree\r\n\r\nStandalone file tree navigation component.\r\n\r\n### Props\r\n\r\n| Prop | Type | Default | Description |\r\n|------|------|---------|-------------|\r\n| `fileTree` | `FileNode` | - | **Required.** Root file tree node |\r\n| `currentPath` | `string` | - | Currently selected path |\r\n| `theme` | `'light' \\| 'dark' \\| 'auto'` | `'light'` | Color theme |\r\n| `onNodeClick` | `(node: FileNode) => void` | - | **Required.** Node click handler |\r\n| `enableSearch` | `boolean` | `true` | Enable search functionality |\r\n| `searchPlaceholder` | `string` | `'Search files...'` | Search input placeholder |\r\n| `showIcons` | `boolean` | `true` | Show file/folder icons |\r\n| `renderFileIcon` | `(node: FileNode) => ReactNode` | - | Custom file icon renderer |\r\n| `renderFolderIcon` | `(node: FileNode) => ReactNode` | - | Custom folder icon renderer |\r\n| `className` | `string` | `''` | Additional CSS class |\r\n\r\n## MarkdownViewer\r\n\r\nPure markdown content renderer.\r\n\r\n### Props\r\n\r\n| Prop | Type | Default | Description |\r\n|------|------|---------|-------------|\r\n| `content` | `string` | - | **Required.** Markdown content |\r\n| `theme` | `'light' \\| 'dark' \\| 'auto'` | `'light'` | Color theme |\r\n| `className` | `string` | `''` | Additional CSS class |\r\n| `components` | `Record<string, ComponentType>` | - | Custom markdown components |\r\n| `filePath` | `string` | - | File path for relative links |\r\n\r\n### Custom Components Example\r\n\r\n```tsx\r\nconst customComponents = {\r\n  h1: ({ children }) => (\r\n    <h1 style={{ color: '#2563eb', borderBottom: '2px solid #2563eb' }}>\r\n      {children}\r\n    </h1>\r\n  ),\r\n  code: ({ children, className }) => (\r\n    <code className={className} style={{ background: '#f1f5f9' }}>\r\n      {children}\r\n    </code>\r\n  ),\r\n  a: ({ href, children }) => (\r\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {children} â†—\r\n    </a>\r\n  )\r\n};\r\n\r\n<MarkdownViewer \r\n  content={markdownContent}\r\n  components={customComponents}\r\n/>\r\n```\r\n\r\n## Breadcrumbs\r\n\r\nNavigation breadcrumb component.\r\n\r\n### Props\r\n\r\n| Prop | Type | Default | Description |\r\n|------|------|---------|-------------|\r\n| `path` | `string` | - | **Required.** Current path |\r\n| `rootPath` | `string` | `'/'` | Root path |\r\n| `theme` | `'light' \\| 'dark' \\| 'auto'` | `'light'` | Color theme |\r\n| `onPathClick` | `(path: string) => void` | - | **Required.** Path click handler |\r\n| `className` | `string` | `''` | Additional CSS class |\r\n\r\n## TypeScript Types\r\n\r\n### FileNode\r\n```typescript\r\ninterface FileNode {\r\n  name: string;\r\n  path: string;\r\n  type: 'file' | 'folder';\r\n  children?: FileNode[];\r\n  content?: string;\r\n  lastModified?: string;\r\n  size?: number;\r\n}\r\n```\r\n\r\n### Theme\r\n```typescript\r\ntype Theme = 'light' | 'dark' | 'auto';\r\n```\r\n\r\n### NavigationState\r\n```typescript\r\ninterface NavigationState {\r\n  currentPath: string;\r\n  currentNode: FileNode | null;\r\n  history: string[];\r\n  historyIndex: number;\r\n}\r\n```\r\n\r\n## Utility Functions\r\n\r\n### parseFileTree(files: Record<string, string>): FileNode\r\nConverts flat file structure to hierarchical tree.\r\n\r\n### findNodeByPath(tree: FileNode, path: string): FileNode | null\r\nFinds node by path in the tree.\r\n\r\n### searchNodes(tree: FileNode, query: string): FileNode[]\r\nSearches nodes matching the query.\r\n\r\n### generateBreadcrumbs(path: string, rootPath?: string): Array<{name: string, path: string}>\r\nGenerates breadcrumb items from path.\r\n\r\n### isMarkdownFile(filename: string): boolean\r\nChecks if file is a markdown file.\r\n\r\n### getFileExtension(filename: string): string\r\nExtracts file extension from filename.\r\n\r\n### normalizePath(path: string): string\r\nNormalizes path format.\r\n\r\n---\r\n\r\nThis concludes the complete API reference. For examples and guides, see the other documentation sections."
}